ACTOR PPE_Q2Stimpack : Stimpack replaces Stimpack
{
	Inventory.PickupSound "items/health2"
	Inventory.PickupMessage "$GOTMED1"
	Inventory.Amount 10
	States
	{
	Spawn:
		2MED A -1
		Stop
	}
}

ACTOR PPE_Q2MediKit : MediKit
{
	Inventory.PickupSound "items/health3"
	Inventory.Amount 25
	States
	{
	Spawn:
		2MED B -1
		Stop
	}
}

ACTOR PPE_Q2HealthBonus : HealthBonus
{
  Inventory.PickupSound "items/health1"
  Inventory.PickupMessage "$GOTSTIM"
  Inventory.Amount 2
  Inventory.MaxAmount 250
  States
  {
  Spawn:
		HBSP A -1
		Stop
  }
}

ACTOR PPE_Adrenaline_Upgrade : UpgradeStamina
{
  +COUNTITEM
  Inventory.PickupMessage "$GOTADRENALINE"
  Inventory.PickupSound "items/q2pickup"
  Inventory.Amount 1
  Inventory.MaxAmount 200
  States
  {
  Spawn:
		2ADR A -1
		Stop
  }
}

ACTOR PPE_Q2MegaHealth : CustomInventory
{
  +COUNTITEM
  +INVENTORY.ALWAYSPICKUP
  Inventory.PickupMessage "$GOTMEGA"
  Inventory.PickupSound "items/megahealth"
  States
  {
  Spawn:
    2MGH A -1
    Stop
  Pickup:
	TNT1 A 0 A_GiveInventory("PPE_TempHealth",min(100,250-health))
	TNT1 A 0 A_GiveInventory("PPE_TempHealthBuffer",5)
    TNT1 A 0 A_GiveInventory("PPE_Q2HealthBonus",50) // will give 100 as one gives 2
    Stop
  }
}

ACTOR PPE_Q2HealthBonusSpawner : PPE_Spawner replaces HealthBonus
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",0,1) == 1,"SpawnHp")
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",0,1)
		TNT1 A 0 A_SpawnPermanent("PPE_SmallGrenade")
		stop
	SpawnHp:
		TNT1 A 0 A_SpawnPermanent("PPE_Q2HealthBonus")
		stop
	}
}

ACTOR PPE_Q2ArmorBonusSpawner : PPE_Spawner replaces ArmorBonus
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",1,1) == 1,"SpawnAr")
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,1)
		TNT1 A 0 A_SpawnPermanent("PPE_SmallGrenade")
		stop
	SpawnAr:
		TNT1 A 0 A_SpawnPermanent("PPE_Q2ArmorBonus")
		stop
	}
}

ACTOR PPE_Q2SoulSpawner : PPE_Spawner replaces Soulsphere
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ACS_NamedExecuteWithResult("SetSpawn",13) //use WithResult otherwise it'll run in parellel
		TNT1 A 0 A_JumpIf(CallAcs("GetSpawn",13) == 3,"Spawn3")
		TNT1 A 0 A_JumpIf(CallAcs("GetSpawn",13) == 2,"Spawn2")
	Spawn1:
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",0,25)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2MegaHealth")
		stop
	Spawn2:
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",0,1) == 1,"Spawn2a")
		Goto Spawn1
	Spawn2a:
		TNT1 A 0 A_SpawnPermanent("PPE_Adrenaline_Upgrade")
		stop
	Spawn3:
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",1,100) == 1,"Spawn3a")
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",0,1) == 1,"Spawn2a")
		Goto Spawn1
	Spawn3a:
		TNT1 A 0 A_SpawnPermanent("PPE_Q2RedArmor")
		stop
	}
}

Actor PPE_25HealthSpawner : PPE_Spawner replaces MediKit
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ACS_NamedExecuteWithResult("SetSpawn",14) //use WithResult otherwise it'll run in parellel
		TNT1 A 0 A_JumpIf(CallAcs("GetSpawn",14) == 6,"Spawn3")
		TNT1 A 0 A_JumpIf(CallAcs("GetSpawn",14) == 4,"Spawn2")
	Spawn1:
		TNT1 A 0 A_SpawnPermanent("PPE_Q2MediKit")
		stop
	Spawn2:
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",1,50) == 1,"Spawn2b")
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",1,25) == 1,"Spawn2a")
		Goto Spawn1
	Spawn2a:
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",0,25)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2GreenArmor")
		stop
	Spawn2b:
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",0,25)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2YellowArmor")
		stop
	Spawn3:
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",0,76) == 1,"Spawn3b")
		TNT1 A 0 A_JumpIf(CallAcs("SpendExcess",0,50) == 1,"Spawn3a")
		Goto Spawn1
	Spawn3a:
		TNT1 A 0 A_SpawnPermanent("PPE_Q2MegaHealth")
		stop
	Spawn3b:
		TNT1 A 0 A_SpawnPermanent("PPE_Adrenaline_Upgrade")
		stop
	}
}

Actor PPE_Q2GreenArmorSpawner : PPE_Spawner replaces GreenArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(CallAcs("CheckExcess",1,500) == 1,"Spawn3")
		TNT1 A 0 A_JumpIf(CallAcs("CheckExcess",1,100) == 1,"Spawn2")
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,75)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2GreenArmor")
		stop
	Spawn2:
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,50)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2YellowArmor")
		stop
	Spawn3:
		TNT1 A 0 A_SpawnPermanent("PPE_Q2RedArmor")
		stop
	}
}

Actor PPE_Q2BlueArmorSpawner : PPE_Spawner replaces BlueArmor
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(CallAcs("CheckExcess",1,50) == 1,"Spawn2")
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,150)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2YellowArmor")
		stop
	Spawn2:
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,100)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2RedArmor")
		stop
	}
}

Actor PPE_BackpackSpawner : PPE_Spawner replaces Backpack
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ACS_NamedExecuteWithResult("SetSpawn",11) //use WithResult otherwise it'll run in parellel
		TNT1 A 0 A_JumpIf(CallAcs("GetSpawn",11) == 2,"Spawn2")
		TNT1 A 0 A_SpawnPermanent("PPE_Q2Bandolier")
		stop
	Spawn2:
		TNT1 A 0 A_SpawnPermanent("PPE_Q2Backpack")
		stop
	}
}

Actor PPE_MegaSphereSpawner : PPE_Spawner replaces Megasphere
{
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 ACS_NamedExecuteWithResult("SetSpawn",12) //use WithResult otherwise it'll run in parellel
		TNT1 A 0 A_JumpIf(CallAcs("GetSpawn",12) == 3,"Spawn3")
		TNT1 A 0 A_JumpIf(CallAcs("GetSpawn",12) == 2,"Spawn2")
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",0,150)
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,100)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2PowerArmor")
		stop
	Spawn2:
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",0,100)
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,200)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2MegaHealth")
		stop
	Spawn3:
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",0,150)
		TNT1 A 0 ACS_NamedExecuteWithResult("RegisterExcess",1,100)
		TNT1 A 0 A_SpawnPermanent("PPE_Q2RedArmor")
		stop
	}
}

Actor PPE_Q2PowerArmor : Megasphere
{
	-INVENTORY.AUTOACTIVATE
	+INVENTORY.KEEPDEPLETED
	+INVENTORY.INVBAR
	Inventory.PickupSound "items/q2pickup"
	Inventory.Icon "2ARMD0"
	Inventory.PickupMessage "$GOTPOWERSHIELD"
	Tag "$TAG_PPE_POWERSHIELD"
	States
	{
	Spawn:
		2ARM D -1
		Stop
	Pickup:
		TNT1 A 0 A_GiveInventory("PPE_Cells",100)
		Stop
	Use:
		TNT1 A 0 A_JumpIfInventory("PPE_PowerArmorOn",0,"TurnOff")
		goto TurnOn
	TurnOn:
		TNT1 A 0 A_JumpIfInventory("PPE_Cells",1,"TurnOnActually")
		Fail
	TurnOnActually:
		TNT1 A 0 A_SetInventory("PPE_PowerArmorOn",1)
		TNT1 A 0 A_PlaySound("items/powershield/on")
		Fail
	TurnOff:
		TNT1 A 0 A_SetInventory("PPE_PowerArmorOn",0)
		//TNT1 A 0 A_GiveInventory("PPE_Q2PowerArmor")
		TNT1 A 0 A_PlaySound("items/powershield/off")
		Fail
	Terminate:
		TNT1 A 0
		Fail
	}
}

ACTOR PPE_PowerArmorOn : Inventory
{
	Inventory.MaxAmount 1
}

Actor PPE_TempHealth : Inventory
{
	Inventory.MaxAmount 200
}

Actor PPE_TempHealthBuffer : Inventory
{
	Inventory.MaxAmount 5
}