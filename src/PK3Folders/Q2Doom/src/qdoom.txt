#library "QDoom"
#include "zcommon.acs"

int players;

script "startup" ENTER
{
	Thing_ChangeTID(0, 6000 + PlayerNumber());
	players++;
	// Like in Quake, set health to at least 50
	//If(GetActorProperty(0, APROP_HEALTH) < 50)
	//{
	//	SetActorProperty(0, APROP_HEALTH, 50);
	//}
}

//script "vitaltickers" ENTER
//{	
//	while (true)
//	{
//		If(CheckInventory("PPE_TempHealth"))
//		{
//			TakeInventory("PPE_TempHealth", 1);
//			If(GetActorProperty(0, APROP_HEALTH) > 100 + GetActorProperty(0, APROP_STAMINA))
//			{
//				SetActorProperty(0, APROP_HEALTH, GetActorProperty(0, APROP_HEALTH) - 1);
//			}
//			else
//			{
//				TakeInventory("PPE_TempHealth", 255);
//			}
//		}
//		Delay(35);
//	}
//}

global int 1:level;
global int 2:SG;
global int 3:SSG;
global int 4:CG;
global int 5:RL;
global int 6:PG;
global int 7:BFG;
global int 8:CS;
global int 9:BER;
global int 10:POW;
global int 11:BPK;
global int 12:HP;

script "map exit" UNLOADING
{
	level += 1;
	For(int i=0;i<players;i++)
	{
		If (GetActorProperty(6000+i, APROP_HEALTH) <= 0) // any player dead, reset the levels
		{
			if (SSG==0) {CG=0;}
			SG=0; SSG=0; BFG=0; BPK=0; 
			if (RL==2) {RL=0;}
			break;
		}
	}
}

script "GetLevelNum" (void)
{
	SetResultValue(level);
	Print(i:level); // For debug purposes, it doesn't work on inventory anyway
}

script "SetSpawn" (int spawnTag)
{
	switch(spawnTag)
	{
		case 2:SG++;break;
		case 3:SSG++;break;
		case 4:CG++;break;
		case 5:RL++;break;
		case 6:PG++;break;
		case 7:BFG++;break;
		case 8:CS++;break;
		case 9:BER++;break;
		case 10:POW++;break;
		case 11:BPK++;break;
		case 12:HP++;break;
	}
	
	if(SG>3){SG=1;}
	if(SSG>3){SSG=1;}
	if(CG>3){CG=2;}
	if(RL>3){RL=1;}
	if(PG>3){PG=1;}
	if(BFG>2){BFG=1;}
	if(CS>2){CS=1;}
	if(BER>2){BER=1;}
	if(POW>3){POW=1;}
	if(BPK>2){BPK=1;}
	if(HP>6){HP=1;}
	
	if(SG>1 && !(CG>2 || RL>2 || PG>1)) {SG=1;} // limit sg spawns
	if(SSG>1 && !(CG>2 || RL>2 || PG>1)) {SSG=1;} // limit ssg spawns
	if(CG==1 && SSG>0 && (RL>0 || PG>0)) {CG++;} // skip mg if late
	
	if(SG==2 && SSG!=0) {SG=3;} // only spawn SSG if no SSG has been spawned
	
	if(SG==2 && SSG==1) {SG=1;SSG=2;} // avoid collission
	if(SG==3 && SSG==2) {SG=1;SSG=3;} // avoid collission
	
	if(PG==3 && BFG==2) {PG=1;BFG=1;} // avoid collission
	if(RL==3 && CS==2) {RL=1;CS=1;} // avoid collission
}

script "GetSpawn" (int spawnTag) // call this with correct values, this checks nothing!
{
	int ret = 0;
	switch(spawnTag)
	{
		case 2:ret=SG;break;
		case 3:ret=SSG;break;
		case 4:ret=CG;break;
		case 5:ret=RL;break;
		case 6:ret=PG;break;
		case 7:ret=BFG;break;
		case 8:ret=CS;break;
		case 9:ret=BER;break;
		case 10:ret=POW;break;
		case 11:ret=BPK;break;
		case 12:ret=HP;break;
	}
	
	SetResultValue(ret);
}

script "SetBandolierAmmo" (void)
{
	if (GetAmmoCapacity("PPE_Bullets") < 800)
	{
		SetAmmoCapacity("PPE_Bullets",600);
		SetAmmoCapacity("PPE_Shells",75);
		SetAmmoCapacity("PPE_Slugs",75);
		SetAmmoCapacity("PPE_MagSlugs",75);
		SetAmmoCapacity("PPE_Cells",450);
		SetAmmoCapacity("PPE_Flechettes",300);
	}
}