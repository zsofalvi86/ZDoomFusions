Class PPE_PipeBombBomb : PPE_Pipebombs
{
	Override bool CanPickup(Actor toucher)
	{
		if (toucher == target && super.CanPickup(toucher))
		{
			if (toucher.player && toucher.player.ReadyWeapon.GetClassName() == "PPE_DNDetonator")
			{toucher.A_SelectWeapon("PPE_DNPipebomb");}
			return true;
		}
		return false;
	}
	
	Override void ApplyKickback(Actor inflictor, Actor source, int damage, double angle, Name mod, int flags){}//don't
	
	Override bool TryPickupRestricted(in out Actor toucher){return false;}

	Default
	{
		+FLOORCLIP; +VULNERABLE;
		Health 5;
		Inventory.Amount 1;
		Inventory.PickupMessage "$GOTPBOMB";
		Inventory.PickupSound "items/dn";
		Gravity 0.5; Mass 999999;
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("weapons/pipebomb/bounce");
	SpawnLoop:
		RPIS A 1;
		Loop;
	Death:
		TNT1 A 0 A_NoGravity;
		TNT1 A 0 A_Explode(192,192);
		TNT1 A 0 A_Quake(4,5,0,256,"");
		TNT1 A 0 A_Quake(2,6,0,720,"");
		TNT1 A 0 A_Quake(1,6,0,4096,"");
		TNT1 A 0 A_PlaySound("weapons/explosion",5);
		BMXP A 4 bright;
		BMXP BCDEF 3 bright;
		TNT1 A 20;
		Stop;
	}
}

Class PPE_DetonatorBase : PPE_DNWeaponBase
{
	Action void A_DetonatePB()
	{
		Actor mo;
		ThinkerIterator	PBFinder = ThinkerIterator.Create("PPE_PipeBombMissile");
		while (mo = Actor(PBFinder.Next()))
		{
			//invoker.owner.A_Print("pb1: "..mo..mo.target);
			if (mo.target == invoker.owner) { mo.ExplodeMissile(null,null,false); }
		}
		PBFinder = ThinkerIterator.Create("PPE_PipeBombBomb");
		while (mo = Actor(PBFinder.Next()))
		{
			//invoker.owner.A_Print("pb2: "..mo..mo.target);
			if (mo.target == invoker.owner) { mo.A_Die(); }
		}
	}
}

Class PPE_Pipebombs : Ammo
{
	Default
	{
		Inventory.Amount 1;
		Inventory.MaxAmount 50;
		Ammo.BackpackAmount 1;
		Ammo.BackpackMaxAmount 50;
		Inventory.Icon "RPISA0";
	}
	
	Override void AttachToOwner(Actor other)
	{
		super.AttachToOwner(other);
		if (!other.CountInv("PPE_DNPipebomb"))
		{
			other.GiveInventory("PPE_DNPipebomb",1);
			other.FindInventory("PPE_DNPipebomb").AttachToOwner(other);
		}
	}
	
	States
	{
	Spawn:
		Stop;
	}
}