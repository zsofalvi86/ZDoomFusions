Actor PPE_Nailgun : Chaingun
{
	+WEAPON.NOALERT
	+WEAPON.ALT_USES_BOTH
	Inventory.Pickupmessage "$GOT_PPE_NG"
	Tag "$TAG_PPE_NG"
	Inventory.PickupSound "items/weapon1"
	Weapon.UpSound "weapons/switch"
	Weapon.SelectionOrder 800
	Weapon.SlotNumber 4
	Weapon.AmmoType "PPE_Nails"
	Weapon.AmmoUse 1
	Weapon.AmmoGive 20
	Weapon.BobRangeX 0.05
	Weapon.BobRangeY 0.75
	Weapon.BobSpeed 2.0
	States
	{
	Drop:
	Spawn:
		NGNW A -1
		Stop
	Ready:
		TNT1 A 0 A_JumpIfInventory("PPE_NgHeat",64,"ReadyLava")
		//TNT1 A 0 A_Overlay(2,"SeekerCheck")
		NG1G A 1 A_WeaponReady
		/*{ 
			A_TakeInventory("PPE_NgHeat",1);
			// A_WeaponReady's handling of firing is inferior, this lets the user fire both alt and normal at the same time
			A_WeaponReady(WRF_NOPRIMARY);
			If(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) 
			{
				return state("Fire");
			}
			return state(0);
		}*/
		Loop
	ReadyLava:
		NG1L BAAABBCCCB 1 A_WeaponReady
		/*{ 
			A_TakeInventory("PPE_NgHeat",1);
			A_WeaponReady(WRF_NOPRIMARY);
			If(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) 
			{
				return state("Fire");
			}
			return state(0);
		}*/
		Loop
		//Goto Ready
	Deselect:
		//TNT1 A 0 A_SetInventory("PPE_NgHeat",0)
	//DeseLoop:
		NG1G A 1 A_Lower(18)
		Loop
	Select:
		NG1G A 1 A_Raise(18)
		Loop
	Fire:
		TNT1 A 0 A_JumpIfInventory("PPE_NgHeat",64,"FireLava")
		//TNT1 A 0 A_GiveInventory("PPE_NgHeat",4)
		TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("PowerSilencer",0,2)
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound("weapons/nailgun/fire",CHAN_WEAPON)
		//TNT1 A 0 A_PlaySound("weapons/nailgun/shoot",3)
		TNT1 A 0 A_PlaySound("items/quad/use",2,CountInv("PowerQuadDamage"))
	    TNT1 A 0 A_FireCustomMissile("PPE_NailgunNail",0,1,-4,0)
		NG1F ABC 1 bright A_Overlay(2,"SeekerCheck")
		TNT1 A 0 A_Refire("Hold")
		Goto Ready
	Hold:
		//TNT1 A 0 A_JumpIfInventory("PPE_NgHeat",64,"HoldLava")
		//TNT1 A 0 A_GiveInventory("PPE_NgHeat",4)
		TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("PowerSilencer",0,2)
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound("weapons/nailgun/fire",CHAN_WEAPON)
		//TNT1 A 0 A_PlaySound("weapons/nailgun/shoot",3)
		TNT1 A 0 A_PlaySound("items/quad/use",2,CountInv("PowerQuadDamage"))
		NG1F A 0 A_FireCustomMissile("PPE_NailgunNail",0,1,4,0)
		NG1F DEF 1 bright A_Overlay(2,"SeekerCheck")
		NG1G A 1 A_Overlay(2,"SeekerCheck")
		TNT1 A 0 A_Refire("Fire")
		goto Ready
	FireLava:
		//TNT1 A 0 A_GiveInventory("PPE_NgHeat",4)
		TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("PowerSilencer",0,2)
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound("weapons/nailgun/fire",CHAN_WEAPON)
		TNT1 A 0 A_PlaySound("weapons/nailgun/shoot",3)
		TNT1 A 0 A_PlaySound("items/quad/use",2,CountInv("PowerQuadDamage"))
	    TNT1 A 0 A_FireCustomMissile("PPE_NailgunFireNail",0,1,-4,0)
		TNT1 A 0 A_FireCustomMissile("none",0,1,-4,0)
		NG1M ABC 1 bright A_Overlay(2,"SeekerCheck")
		TNT1 A 0 A_Refire("HoldLava")
		TNT1 A 0 A_PlaySound("weapons/nailgun/cool",6)
		Goto Ready
	HoldLava:
		//TNT1 A 0 A_GiveInventory("PPE_NgHeat",4)
		TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("PowerSilencer",0,2)
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound("weapons/nailgun/fire",CHAN_WEAPON)
		TNT1 A 0 A_PlaySound("weapons/nailgun/shoot",3)
		TNT1 A 0 A_PlaySound("items/quad/use",2,CountInv("PowerQuadDamage"))
		TNT1 A 0 A_FireCustomMissile("PPE_NailgunFireNail",0,1,4,0)
		TNT1 A 0 A_FireCustomMissile("none",0,1,4,0)
		NG1M DEF 1 bright A_Overlay(2,"SeekerCheck")
		NG1L A 1 A_Overlay(2,"SeekerCheck")
		TNT1 A 0 A_Refire("FireLava")
		TNT1 A 0 A_PlaySound("weapons/nailgun/cool",6)
		Goto Ready
	AltFire:
		TNT1 A 0 A_JumpIfInventory("PPE_NgHeat",64,"UnLava")
		TNT1 A 0 A_SetInventory("PPE_NgHeat",65)
		TNT1 A 0 A_PlaySound("weapons/nailgun/lavaon",5)
		NG1G A 2
		NG1L CBA 2
		Goto Ready
	UnLava:
		TNT1 A 0 A_SetInventory("PPE_NgHeat",0)
		TNT1 A 0 A_PlaySound("weapons/nailgun/lavaoff",5)
		NG1L ABC 2
		NG1G A 2
		Goto Ready
	Flash:
	AltFlash:
		TNT1 A 0 A_Light1
		TNT1 AA 1 A_SetPitch(pitch-0.2)
		TNT1 A 0 A_Light2
		TNT1 A 1 A_SetPitch(pitch+0.4)
		Goto LightDone
	SeekerCheck:
		TNT1 A 0
		{
			If(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK)//32)
			{
				A_RemoveChildren(true,RMVF_EVERYTHING);
				A_FireBullets(0,0,1,0,"PPE_LaserPointerNG",FBF_NOFLASH|FBF_NORANDOM|FBF_NORANDOMPUFFZ);
			}
		}
		Stop
	}
}

Actor PPE_NailgunNail : PPE_Nail2Base
{
	DamageType "Quake1Nail"
	Speed 40
	Damage (10) // 9
	States
	{
	Spawn:
		TNT1 A 0 A_CheckProximity("Seek","PPE_LaserPointerNG",2048,1,CPXF_SETTRACER|CPXF_CLOSEST)
		NALS A 1
		Loop
	Seek:
		TNT1 A 0 A_FaceTracer(10,10,0,0,FAF_BOTTOM)
		NALS A 1 A_ChangeVelocity(40*cos(pitch),0,-40*sin(pitch),CVF_RELATIVE|CVF_REPLACE)
		Goto Spawn
	}
}

Actor PPE_NailgunFireNail : PPE_FireNail2Base
{
	+PIERCEARMOR
	DamageType "Quake1Nail"
	Speed 40
	DamageType LesserCloseSplatter
	Damage (20) // 15
	States
	{
	Spawn:
		TNT1 A 0 A_CheckProximity("Seek","PPE_LaserPointerNG",2048,1,CPXF_SETTRACER|CPXF_CLOSEST)
		NSLF A 1 bright
		Loop
	Seek:
		TNT1 A 0 A_FaceTracer(10,10,0,0,FAF_BOTTOM)
		NSLF A 1 bright A_ChangeVelocity(40*cos(pitch),0,-40*sin(pitch),CVF_RELATIVE|CVF_REPLACE)
		Goto Spawn
	}
}

Actor PPE_NgHeat : Inventory
{
	Inventory.MaxAmount 104
}

Actor PPE_LaserPointerNG : BulletPuff
{
var int user_countdown;
+ALWAYSPUFF
+PUFFONACTORS
+PAINLESS
+THRUGHOST
+BLOODLESSIMPACT
-ALLOWPARTICLES
-RANDOMIZE
+FORCEXYBILLBOARD
-ACTIVATEIMPACT
+HITTRACER // Tracer is the monster that is hit
+PUFFGETSOWNER // Target is the shooter
RenderStyle Normal
Alpha 1.0
Vspeed 0
States
  {
  XDeath:
  Spawn:
	TNT1 A 0 //A_TransferPointer (pointer source, pointer recipient, pointer sourcefield, pointer recipientfield[, int flags])
	TNT1 A 0 A_TransferPointer(AAPTR_DEFAULT,AAPTR_DEFAULT,AAPTR_TARGET,AAPTR_MASTER)
	TNT1 A 0 A_SetUserVar("user_countdown",350)
  Loopy:
	TNT1 A 0 A_JumpIf(user_countdown==0,"Despawn")
	TNT1 A 0 A_JumpIfTargetInLOS("Live",360,JLOSF_NOSIGHT|JLOSF_DEADNOJUMP|JLOSF_COMBATANTONLY|JLOSF_CHECKTRACER)
	Goto Despawn
  Live:
	TNT1 A 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER,AAPTR_NULL),"Despawn")
  Stick:
	TNT1 A 0 A_Warp(AAPTR_TRACER, 0, 0, 1, 0, WARPF_NOCHECKPOSITION|WARPF_COPYINTERPOLATION, "Cont", 0.5)
  Cont:
	TNT1 A 0 A_SetUserVar("user_countdown",user_countdown-1)
	BAL1 A 1 Bright
	Goto Loopy
  Crash:
  Despawn:
	TNT1 A 0
	stop
  }
}