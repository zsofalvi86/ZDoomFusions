Class PPE_Q2BFGBall : BFGBall
{
	int BFGPhase;

	Default
	{
		Speed 18;
		Damage (0);
		RenderStyle "Normal";
		DeathSound "weapons/quake2/bfg/explode";
		DamageType "Quake2Cell";
		Decal "BFGLightning";
		+FORCERADIUSDMG;
	}
	
	mixin PPE_DirectedFlatBeam;
	
	Override int DoSpecialDamage(Actor target, int damage, name damagetype)
	{
		//console.printf("%s%p", "tt:", target.Target);
		if(BFGPhase == 1) // rays
		{
			DirectedFlatBeam("PPE_BFGLaser", "PPE_BFGLaserPuff", target, 600, true);
			/*int step = 24;
			//double dist = Distance3d(target);
			
			let targetmidpos = target.Vec3Offset(0,0,target.height/2);
			
			let distf = Vec2to(target);
			double angle = AngleTo(target);
			
			double distz = targetmidpos.z - pos.z;
			double ddist = sqrt(distf.X*distf.X + distf.Y*distf.Y + distz*distz);
			double pitch = Normalize180(-asin(distz / ddist));
			
			FLineTraceData trc;
			if (LineTrace(angle,600,pitch,TRF_THRUACTORS,0,0,0,trc))
			{
				//target.TraceBleedAngle(10,angle,pitch);
				LineAttack(angle,600,pitch,0,"Normal","PPE_BFGLaserPuff",0);
				
				for (int i=step; i<trc.distance; i+=step)
				{
				//console.printf("%s%d", "tpz:", target.pos.z);//console.printf("%s%d", "opz:", pos.z);//console.printf("%s%d", "idist:", (i/dist));

					let bppos = pos + i * trc.HitDir;
					let beamp1 = Spawn("PPE_BFGLaser",bppos);
					let beamp2 = Spawn("PPE_BFGLaser",bppos);
					beamp1.bFlatSprite = true;
					beamp1.pitch = pitch;
					beamp1.angle = angle;
					beamp2.bWallSprite = true;
					beamp2.bRollSprite = true;
					beamp2.angle = angle+90;
					beamp2.roll = -pitch-90;
				}
			}*/
		}
		if(BFGPhase == 3) // flash
		{
			if(self.Target.CheckSight(target,SF_SEEPASTSHOOTABLELINES))
			{
				//console.printf("%s", "ambush");
				Spawn("PPE_BFG10kFlash",target.pos+(0,0,target.height*0.5));
				return Super.DoSpecialDamage(target,damage*2,damagetype);
			}
			return 0;
		}
		return Super.DoSpecialDamage(target,damage,damagetype);
	}
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		BFGPhase = 1;
	}
	
	States
	{
	Spawn:
		TNT1 A 0 A_PlaySound("weapons/quake2/bfg/fly",6,1.0,1);
	Loopy:
		BFGB ABCD 3 Bright 
		{
			//A_RadiusGive("PPE_BFGBeamItem",760,RGF_MONSTERS|RGF_PLAYERS|RGF_NOTARGET);
			A_Explode((12),500,0,0,500); // 10
			for (int i=0; i<8; i++)
			{
				A_SpawnParticle("green",SPF_FULLBRIGHT|SPF_RELATIVE,10,7,FRandom(0,360),0,0,0,Random(1,3),0,Random(-3,3));
			}
		}
		Loop;
	Death:
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 {BFGPhase = 2;}
		TNT1 A 0 A_Explode(250,192); // 200
		TNT1 A 0 A_SpawnItem("PPE_GreenQuakeExplo");
		TNT1 A 0 A_Quake(8,9,0,640,"");
		TNT1 A 0 A_Quake(5,10,0,1280,"");
		TNT1 A 0 A_Quake(3,12,0,9064,"");
		BFGX ABCDE 3 Bright;
		BFGX F 2 Bright;
		TNT1 A 0 {BFGPhase = 3;}
		//TNT1 A 0 A_RadiusGive("PPE_BFGFlashItem",1500,RGF_MONSTERS|RGF_PLAYERS|RGF_NOTARGET);
		TNT1 A 0 A_Explode(625,500,0); // 500
		BFGX F 1 Bright;
		BFGX GHIJK 3 Bright;
		Stop;
  }
}