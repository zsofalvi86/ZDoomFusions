Class PPE_Quake2WeaponBase : PPE_WeaponBase abstract
{
	Default {Weapon.UpSound "weapons/quake2/switch"; Inventory.PickupSound "weapons/quake2/pickup"; ActiveSound "weapons/quake2/ammo";}
	
	mixin PPE_TravelingRings;
	mixin PPE_FlatBeam;
	
	Array<Actor> memactors;
	int memtic;

	Override void ModifyDamage(int damage, Name damageType, out int newdamage, bool passive, Actor inflictor, Actor source, int flags)
	{
		//console.printf("%s%s%p", "q2d:", source.GetClassName(), self);
		//if (owner && owner.Player) {console.printf("%s%p%p", "q2d:", owner.Player.ReadyWeapon, self);}
		if (source && owner && owner.Player && owner.Player.mo && owner.Player.ReadyWeapon == self)
		{
			//console.printf("%s%s", "q2d:", owner.GetClassName());
			if (passive) //passive = taking dmg
			{
				if (source == owner)
				{
					newdamage = damage / 2;
				}
				else
				{
					newdamage = damage;
				}
			}
			else
			{
				let curtime = level.Time;
				if (memtic != curtime) {memactors.Clear();}
				let membered = memactors.Find(source) != memactors.Size();
				if((source.Target != owner || (memtic == curtime && membered)) && !source.Player)
				{
					if (!membered) {memactors.Push(source);}
					memtic = curtime;
					//console.printf("%s", "ambush");
					newdamage = damage * 2;
				}
				else
				{
					newdamage = damage;
				}
			}
		}
	}
}
